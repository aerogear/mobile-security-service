// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package apps

import (
	"github.com/aerogear/mobile-security-service/models"
	"sync"
)

var (
	lockAppServiceMockGetApps sync.RWMutex
)

// Ensure, that AppServiceMock does implement AppService.
// If this is not the case, regenerate this file with moq.
var _ AppService = &AppServiceMock{}

// AppServiceMock is a mock implementation of AppService.
//
//     func TestSomethingThatUsesAppService(t *testing.T) {
//
//         // make and configure a mocked AppService
//         mockedAppService := &AppServiceMock{
//             GetAppsFunc: func() (*[]models.App, error) {
// 	               panic("mock out the GetApps method")
//             },
//         }
//
//         // use mockedAppService in code that requires AppService
//         // and then make assertions.
//
//     }
type AppServiceMock struct {
	// GetAppsFunc mocks the GetApps method.
	GetAppsFunc func() (*[]models.App, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetApps holds details about calls to the GetApps method.
		GetApps []struct {
		}
	}
}

// GetApps calls GetAppsFunc.
func (mock *AppServiceMock) GetApps() (*[]models.App, error) {
	if mock.GetAppsFunc == nil {
		panic("AppServiceMock.GetAppsFunc: method is nil but AppService.GetApps was just called")
	}
	callInfo := struct {
	}{}
	lockAppServiceMockGetApps.Lock()
	mock.calls.GetApps = append(mock.calls.GetApps, callInfo)
	lockAppServiceMockGetApps.Unlock()
	return mock.GetAppsFunc()
}

// GetAppsCalls gets all the calls that were made to GetApps.
// Check the length with:
//     len(mockedAppService.GetAppsCalls())
func (mock *AppServiceMock) GetAppsCalls() []struct {
} {
	var calls []struct {
	}
	lockAppServiceMockGetApps.RLock()
	calls = mock.calls.GetApps
	lockAppServiceMockGetApps.RUnlock()
	return calls
}
