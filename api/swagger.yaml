basePath: /api
consumes:
- application/json
definitions:
  App:
    description: App is the model struct for apps
    properties:
      appId:
        type: string
        x-go-name: AppID
      appName:
        type: string
        x-go-name: AppName
      deletedAt:
        type: string
        x-go-name: DeletedAt
      deployedVersions:
        items:
          $ref: '#/definitions/Version'
        type: array
        x-go-name: DeployedVersions
      id:
        type: string
        x-go-name: ID
      numOfAppLaunches:
        format: int64
        type: integer
        x-go-name: NumOfAppLaunches
      numOfCurrentInstalls:
        format: int64
        type: integer
        x-go-name: NumOfCurrentInstalls
      numOfDeployedVersions:
        format: int64
        type: integer
        x-go-name: NumOfDeployedVersions
    type: object
    x-go-package: github.com/aerogear/mobile-security-service/pkg/models
  Device:
    description: Device model
    properties:
      appId:
        type: string
        x-go-name: AppID
      deviceId:
        type: string
        x-go-name: DeviceID
      deviceType:
        type: string
        x-go-name: DeviceType
      deviceVersion:
        type: string
        x-go-name: DeviceVersion
      id:
        type: string
        x-go-name: ID
      version:
        type: string
        x-go-name: Version
      versionId:
        type: string
        x-go-name: VersionID
    type: object
    x-go-package: github.com/aerogear/mobile-security-service/pkg/models
  User:
    description: User is the model struct for users
    properties:
      email:
        type: string
        x-go-name: Email
      username:
        type: string
        x-go-name: Username
    type: object
    x-go-package: github.com/aerogear/mobile-security-service/pkg/models
  Version:
    description: Version model
    properties:
      appId:
        type: string
        x-go-name: AppID
      devices:
        items:
          $ref: '#/definitions/Device'
        type: array
        x-go-name: Devices
      disabled:
        type: boolean
        x-go-name: Disabled
      disabledMessage:
        type: string
        x-go-name: DisabledMessage
      id:
        type: string
        x-go-name: ID
      lastLaunchedAt:
        type: string
        x-go-name: LastLaunchedAt
      numOfAppLaunches:
        format: int64
        type: integer
        x-go-name: NumOfAppLaunches
      numOfCurrentInstalls:
        format: int64
        type: integer
        x-go-name: NumOfCurrentInstalls
      version:
        type: string
        x-go-name: Version
    type: object
    x-go-package: github.com/aerogear/mobile-security-service/pkg/models
info:
  description: This is a sample mobile security service server.
  title: API for Mobile Security Service
  version: 0.2.0
paths:
  /apps:
    get:
      description: Returns root level information for all apps
      operationId: getApps
      parameters:
      - description: The app_id to filter the app by appId
        in: query
        name: appId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/App'
        "204":
          description: successful operation by no apps were found
        "404":
          description: App not found
      summary: Retrieve list of apps
  /apps/:id/versions:
    put:
      description: Update all versions informed of an app using the app id, including
        updating version information
      operationId: UpdateAppVersions
      parameters:
      - description: The id for the app that will have its versions updated
        in: path
        name: id
        required: true
        type: string
      - description: Updated 1 or more versions of an app
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Version'
      produces:
      - application/json
      responses:
        "200":
          description: successful update
        "400":
          description: Invalid app and/or versions supplied
        "404":
          description: App not found
      summary: Update 1 or more versions of an app
  /apps/:id/versions/disable:
    post:
      description: Disable all versions of an app
      operationId: updateApp
      parameters:
      - description: The id for the app that will have all its versions updated
        in: path
        name: id
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Version'
      produces:
      - application/json
      responses:
        "200":
          description: successful update
        "400":
          description: Invalid app supplied
        "404":
          description: App not found
      summary: Disable all versions of an app
  /apps/{id}:
    delete:
      description: To do a a soft deleted at the App
      operationId: DeleteAppById
      parameters:
      - description: The id for the app that needs to be fetched.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: successful operation
        "400":
          description: Invalid id supplied
        "404":
          description: App not found
      summary: Does a soft delete at in the App
    get:
      description: Retrieve all information for a single app including all child information
      operationId: GetActiveAppByID
      parameters:
      - description: The id for the app that needs to be fetched.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/App'
        "400":
          description: Invalid id supplied
        "404":
          description: App not found
      summary: Get app by id
  /healthz:
    get:
      description: Check the health of the REST SERVICE API
      operationId: health
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
        "500":
          description: Internal Server Error
      summary: Check if the server can receive requests
  /init:
    post:
      description: Capture metrics from device and return if the app version they
        are using is disabled and has a set disabled message
      operationId: initAppFromDevice
      parameters:
      - description: Updated app object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Version'
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid id supplied
        "404":
          description: Data not found
      summary: Init call from SDK
  /metrics:
    get:
      description: Get the metrics of the service
      operationId: metrics
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
      summary: Retrieve all metrics for the Go server
  /ping:
    get:
      description: Check the status of the REST SERVICE API
      operationId: status
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
      summary: Check if the server is running
  /user:
    get:
      description: Returns user
      operationId: getUser
      produces:
      - application/json
      responses:
        "200":
          description: sucessful operation
        "404":
          description: No user found
      summary: Retrieve user
produces:
- application/json
schemes:
- http
- https
swagger: "2.0"
