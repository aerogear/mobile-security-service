basePath: /api
consumes:
- application/json
definitions:
  App:
    description: App is the model struct for apps
    properties:
      appId:
        type: string
        x-go-name: AppID
      appName:
        type: string
        x-go-name: AppName
      deployedVersions:
        items:
          $ref: '#/definitions/Version'
        type: array
        x-go-name: DeployedVersions
      id:
        type: string
        x-go-name: ID
      numOfAppLaunches:
        format: int64
        type: integer
        x-go-name: NumOfAppLaunches
      numOfClients:
        format: int64
        type: integer
        x-go-name: NumOfClients
      numOfDeployedVersions:
        format: int64
        type: integer
        x-go-name: NumOfDeployedVersions
    type: object
    x-go-package: github.com/aerogear/mobile-security-service/pkg/models
  Version:
    description: Version is the model struct for Version
    properties:
      appId:
        type: string
        x-go-name: AppID
      disabled:
        type: boolean
        x-go-name: Disabled
      disabledMessage:
        type: string
        x-go-name: DisabledMessage
      id:
        format: int64
        type: integer
        x-go-name: ID
      numOfAppStartups:
        format: int64
        type: integer
        x-go-name: NumOfAppStartups
      numOfClients:
        format: int64
        type: integer
        x-go-name: NumOfClients
      version:
        type: string
        x-go-name: Version
    type: object
    x-go-package: github.com/aerogear/mobile-security-service/pkg/models
info:
  description: This is a sample mobile security service server.
  title: API for Mobile Security Service
  version: 0.1.0
paths:
  /apps:
    get:
      description: Returns root level information for all apps
      operationId: getApps
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/App'
      summary: Retrieve list of apps
  /apps/{id}:
    get:
      description: Retrieve all information for a single app including all child information
      operationId: getAppById
      parameters:
      - description: The id for the app that needs to be fetched.
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/App'
        "400":
          description: Invalid id supplied
        "404":
          description: App not found
      summary: Get app by id
    put:
      description: Update a single app using the app id, including updating version
        information
      operationId: updateApp
      parameters:
      - description: The id for the app that needs to be updated.
        in: path
        name: id
        required: true
        type: string
      - description: Updated app object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/App'
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/App'
        "400":
          description: Invalid app supplied
        "404":
          description: App not found
      summary: Update app by id
  /init:
    post:
      description: Capture metrics from device and return if the app version they
        are using is disabled and has a set disabled message
      operationId: initAppFromDevice
      parameters:
      - description: Updated app object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AppInit'
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/AppInitResponse'
        "400":
          description: Invalid appId supplied
        "404":
          description: App not found
      summary: Init call from sdk
produces:
- application/json
schemes:
- http
- https
swagger: "2.0"
